name: Playwright Tests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  CONTENTFUL_DELIVERY_TOKEN: ${{ vars.CONTENTFUL_DELIVERY_TOKEN }}
  CONTENTFUL_PREVIEW_TOKEN: ${{ vars.CONTENTFUL_PREVIEW_TOKEN }}
  CONTENTFUL_SPACE_ID: ${{ vars.CONTENTFUL_SPACE_ID }}

jobs:
  test:
    timeout-minutes: 60
    runs-on: ${{ matrix.os }}
    strategy: 
      matrix:
        os: [ubuntu-latest]
        node_version: [16]
    steps:
    - uses: actions/checkout@v3
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2.2.4
      with: 
        version: 7
    
    - name: Set node version to ${{ matrix.node_version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node_version }}
        cache: "pnpm"

    - name: Install dependencies
      run: pnpm install
  
    - name: Set Playwright path and Get playwright version
      run: |
        echo "PLAYWRIGHT_BROWSERS_PATH=$HOME/.cache/playwright-bin" >> $GITHUB_ENV
        PLAYWRIGHT_VERSION="$(pnpm ls --depth 0 --json -D | jq --raw-output '.[0].devDependencies["@playwright/test"].version')"
        echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV    
    
    - name: Cache Playwright's binary
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-playwright-bin-v1-${{ env.PLAYWRIGHT_VERSION }}
        path: ${{ env.PLAYWRIGHT_BROWSERS_PATH }}
        restore-keys: |
          ${{ runner.os }}-playwright-bin-v1-

    - name: Install Playwright
      run: pnpm playwright install --with-deps
    - name: Build
      run: pnpm run build

    - name: Run Playwright tests
      run: pnpm run testE2E

    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
